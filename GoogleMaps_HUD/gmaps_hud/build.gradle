apply plugin: 'com.android.application'

def keystoreFilepath = ''
def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyfile = file('s.keystoreel.temp')

Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('keystore.properties').newDataInputStream())
keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyfile = file(keystoreFilepath)
}

android {

    signingConfigs {
        release {
            storeFile keyfile
            storePassword keystorePSW
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
        }
    }

    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "sky4s.garminhud.app"
        minSdkVersion 23
        targetSdkVersion 23
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def name = versionProps['VERSION_NAME']
        def code = versionProps['VERSION_CODE'].toInteger() + 1
        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {

            versionName name
            versionCode code
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}


dependencies {
    //location service needed
//    implementation 'com.google.android.gms:play-services:12.0.1'
    implementation 'com.google.android.gms:play-services-location:17.0.0'


    //android UI needed
//    implementation 'com.android.support:support-v13:23.4.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    //    implementation 'com.android.support:support-v4:23.4.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.0'

//    implementation 'com.android.support:design:23.4.0'
    implementation 'com.google.android.material:material:1.2.0'
//    implementation 'com.google.android.material.material:1.1.0-alpha'

//    implementation 'com.android.support:appcompat-v7:23.4.0'
    implementation 'androidx.core:core:1.3.1'
    implementation 'androidx.media:media:1.1.0'

    //bluetooth needed
//    implementation 'com.akexorcist:bluetoothspp:1.0.0'
    //    same as com.akexorcist:bluetoothspp:1.0.0,  but from https://github.com/skyforcetw/Android-BluetoothSPPLibrary
    //    api files('libs/library-release.aar')
    //    implementation project(':bt-spp-library-release')
    implementation project(':bt-spp-library')

    //prompt needed
    implementation 'uk.co.samuelwall:material-tap-target-prompt:3.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'

    //ocr
//    implementation 'com.rmtheis:tess-two:6.0.0'
}

//apply plugin: 'com.google.gms.google-services'

